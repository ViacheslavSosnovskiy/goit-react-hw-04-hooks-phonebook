{"version":3,"sources":["components/App.module.css","components/Filter/filter.module.css","components/ContactList/contact.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/Item.js","components/ContactList/ContactList.js","components/App.js","components/hooks/useLocalStorage.js","index.js","components/ContactForm/contactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","console","log","props","onSubmit","resetForm","this","className","s","label","maxLength","input","type","onChange","pattern","title","required","button","Component","Filter","Item","id","onDeleteContact","item","onClick","ContactList","contacts","contact","map","App","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","container","person","uuidv4","some","toast","error","prevState","wrapper","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.028dc8d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3nIo5\",\"wrapper\":\"App_wrapper__3NotU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"filter_input__gjsj6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"contact_contact___fiau\",\"item\":\"contact_item__1ti1v\",\"button\":\"contact_button__TImlR\",\"name\":\"contact_name__3EdxK\"};","import React, { Component } from \"react\";\r\nimport s from \"./contactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className={s.label}>\r\n            Name\r\n            <input\r\n              maxLength=\"22\"\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label className={s.label}>\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\" className={s.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import s from \"./filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\n// ===================================//\r\n\r\n// const Filter = ({ value, onChange }) => {\r\n//   <label>\r\n//     <input type=\"text\" value={value} onChange={onChange} />\r\n//     Фильтр по имени\r\n//   </label>;\r\n// };\r\n\r\n// export default Filter;\r\n","import s from \"./contact.module.css\";\r\n\r\nconst Item = ({ id, name, number, onDeleteContact }) => {\r\n  return (\r\n    <li className={s.item}>\r\n      <p className={s.name}>{name}</p>\r\n      <p>{number}</p>\r\n      <button className={s.button} onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import Item from \"./Item\";\r\nimport s from \"./contact.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.contact}>\r\n      {contacts.map((contact) => (\r\n        <Item key={contact.id} {...contact} onDeleteContact={onDeleteContact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useState } from \"react\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport Filter from \"./Filter\";\r\nimport ContactList from \"./ContactList\";\r\n// import Modal from \"./Modal\";\r\n// import IconButton from \"./IconButton\";\r\n\r\nimport s from \"./App.module.css\";\r\n\r\n// ====== tostify =======\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// ========== ID ===========\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n// import shortid from \"shortid\";\r\n\r\n// ===== REACT_ICONS =======\r\n// import { ImUserPlus, ImCancelCircle } from \"react-icons/im\";\r\n// ========= hooks =========\r\nimport useLocalStorage from \"./hooks/useLocalStorage\";\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", \"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n  // const [showModal, setShowModal] = useState(false);\r\n\r\n  const addContact = ({ name, number }) => {\r\n    const person = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    if (contacts.some((contact) => contact.name === person.name)) {\r\n      toast.error(\"This contact is already exist ! Try one more time, please!\");\r\n      return;\r\n    }\r\n\r\n    setContacts((prevState) => [...prevState, ...person]);\r\n  };\r\n\r\n  const deleteContact = (id) => {\r\n    setContacts(contacts.filter((contact) => contact.id !== id));\r\n  };\r\n\r\n  const changeFilter = (e) => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  // const toggleModal = () => {\r\n  //   setShowModal(!showModal);\r\n  // };\r\n\r\n  const visibleContacts = getVisibleContacts();\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <h2>Add contacts</h2>\r\n      <ContactForm onSubmit={addContact} />\r\n      {/* <IconButton onClick={toggleModal} aria-label=\"добавить контакт\">\r\n        <ImUserPlus width=\"20\" height=\"20\" fill=\"white\" />\r\n      </IconButton> */}\r\n      <h1>Phonebook</h1>\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter value={filter} onChange={changeFilter} />\r\n      <div className={s.wrapper}>\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={deleteContact}\r\n        />\r\n      </div>\r\n      {/* <div>\r\n        {showModal && (\r\n          <Modal onClose={toggleModal}>\r\n            <IconButton onClick={toggleModal}>\r\n              <ImCancelCircle width=\"20\" height=\"20\" fill=\"white\" />\r\n            </IconButton>\r\n          </Modal>\r\n        )}\r\n      </div> */}\r\n      <ToastContainer autoClose={4000} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// =================    old    ================\r\n// import React, { Component } from \"react\";\r\n// import ContactForm from \"./ContactForm\";\r\n// import Filter from \"./Filter\";\r\n// import ContactList from \"./ContactList\";\r\n// import Modal from \"./Modal\";\r\n// import IconButton from \"./IconButton\";\r\n\r\n// import s from \"./App.module.css\";\r\n\r\n// // ========== ID =========== //\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n// // import shortid from \"shortid\";\r\n\r\n// import { ReactComponent as AddContact } from \"./icons/user-plus.svg\";\r\n// import { ReactComponent as Cross } from \"./icons/cross.svg\";\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     contacts: [\r\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n//       { id: \"id-5\", name: \"Kate Yeland\", number: \"234-01-29\" },\r\n//       { id: \"id-6\", name: \"Olex Bond\", number: \"456-87-54\" },\r\n//     ],\r\n//     filter: \"\",\r\n//     showModal: false,\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     console.log(\"componentDidMount\");\r\n\r\n//     const getContacts = localStorage.getItem(\"contacts\");\r\n//     const parsedContacts = JSON.parse(getContacts);\r\n\r\n//     if (parsedContacts) {\r\n//       this.setState({ contacts: parsedContacts });\r\n//     }\r\n//     // console.log(\"parsedContacts\", parsedContacts);\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     // console.log(\"prevProps\", prevProps);\r\n//     // console.log(\"this.state\", this.state);\r\n//     if (this.state.contacts !== prevState.contacts) {\r\n//       console.log(\"обновилось поле!\");\r\n\r\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n//     }\r\n\r\n//     // закрытие модалки через проверку\r\n//     if (\r\n//       this.state.contacts.length > prevState.contacts.length &&\r\n//       prevState.contacts.length !== 0\r\n//     ) {\r\n//       this.toggleModal();\r\n//     }\r\n//   }\r\n\r\n//   addContact = ({ name, number }) => {\r\n//     const person = {\r\n//       id: uuidv4(),\r\n//       name,\r\n//       number,\r\n//     };\r\n\r\n//     if (\r\n//       this.state.contacts.some(\r\n//         (contact) => contact.name.toLowerCase() === person.name.toLowerCase()\r\n//       )\r\n//     ) {\r\n//       alert(\"This contact is already exist!! Try one more time, please!\");\r\n//       return;\r\n//     }\r\n\r\n//     this.setState((prevState) => ({\r\n//       contacts: [person, ...prevState.contacts],\r\n//     }));\r\n\r\n//     // закрытие модалки по сабмиту формы\r\n//     // this.toggleModal();\r\n//   };\r\n\r\n//   deleteContact = (id) => {\r\n//     this.setState((prevState) => ({\r\n//       contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n//     }));\r\n//   };\r\n\r\n//   changeFilter = (e) => {\r\n//     this.setState({ filter: e.currentTarget.value });\r\n//   };\r\n\r\n//   getVisibleContacts = () => {\r\n//     const normalizedFilter = this.state.filter.toLowerCase();\r\n\r\n//     return this.state.contacts.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(normalizedFilter)\r\n//     );\r\n//   };\r\n\r\n//   toggleModal = () => {\r\n//     this.setState(({ showModal }) => ({\r\n//       showModal: !showModal,\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n//     const visibleContacts = this.getVisibleContacts();\r\n\r\n//     return (\r\n//       <div className={s.container}>\r\n//         <IconButton onClick={this.toggleModal} aria-label=\"добавить контакт\">\r\n//           <AddContact width=\"20\" height=\"20\" fill=\"white\" />\r\n//         </IconButton>\r\n//         <h1>Phonebook</h1>\r\n\r\n//         <h2>Contacts</h2>\r\n//         <Filter value={this.state.filter} onChange={this.changeFilter} />\r\n//         <div className={s.wrapper}>\r\n//           <ContactList\r\n//             contacts={visibleContacts}\r\n//             onDeleteContact={this.deleteContact}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           {this.state.showModal && (\r\n//             <Modal onClose={this.toggleModal}>\r\n//               <IconButton onClick={this.toggleModal}>\r\n//                 <Cross width=\"20\" height=\"20\" fill=\"white\" />\r\n//               </IconButton>\r\n//               <div>\r\n//                 <h2>Add contacts</h2>\r\n//                 <ContactForm onSubmit={this.addContact} />\r\n//               </div>\r\n//             </Modal>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"contactForm_label__mmD5f\",\"input\":\"contactForm_input__2dv-R\",\"button\":\"contactForm_button__3LPCe\"};"],"sourceRoot":""}